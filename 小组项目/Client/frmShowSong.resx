<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>